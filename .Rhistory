# list (which is a list of trials that were catch trials) will be marked TRUE
tempframe$catchbool <- is.element(tempframe$trials_2.thisTrialN, catches)
catchesframe <- tempframe[-c(1:7),]
#i fucked up the experiment program somehow and there's two observations missing from each set. gotta drop the singletons.
# also, none of the responses are "2"
# also, there's something wrong with the catch trials
# what is going on?
for (j in c(8:nrow(tempframe))){
if (length(which(tempframe$realcomparison == tempframe$realcomparison[j], arr.ind=TRUE)) < 2){
#print("missing at")
#print(which(tempframe$realcomparison == tempframe$realcomparison[j], arr.ind=TRUE))
tempframe <- tempframe[-c(j),]
}
}
#make the first pass and second pass in seperate datasets, and then
#arrange them so theyre in the same order. simplifies things
firstpasses <- tempframe[with(tempframe,which(pass == "first pass")), ]
firstpasses <- firstpasses  %>% arrange(realcomparison)
secondpasses <- tempframe[with(tempframe,which(pass == "second pass")), ]
secondpasses <- secondpasses  %>% arrange(realcomparison)
#this generates graphs of the similarity ratings- but the x axis is in order
#of comparison number in the reference list, not the order that the participants
#made the comparisons in.
complist <- firstpasses$realcomparison
complist <- data.frame(complist)
complist$meanresponses <- (firstpasses$similarity +secondpasses$similarity)/2
complist$first <- firstpasses$similarity
complist$timefirst <- firstpasses$response_time
complist$second <- secondpasses$similarity
complist$timesecond <- secondpasses$response_time
complist$trialnos <- firstpasses$trials_2.thisTrialN
complist$meantime <- (complist$timefirst + complist$timesecond) /2
totalmeantime <- mean(complist$meantime)
meantimes <- rbind(meantimes, totalmeantime)
#correlates the first passes with the second passes, pearson style
pearson <- cor(firstpasses$similarity, secondpasses$similarity)
#print(tempframe$participant[i])
#print("in firstpasses:")
#print(nrow(firstpasses))
#print(pearson)
pearsonresults <- rbind(pearsonresults, pearson)
rownames(pearsonresults)[i] = as.character(tempframe$participant[i])
responses<- ggplot(data=complist, aes(x=trialnos)) +
geom_point(shape = 3, aes(y = first, colour = "first pass")) +
geom_point(shape = 4, aes(y = second, colour = "second pass")) +
geom_line(aes(y=meanresponses, colour = "average")) +
labs(title=participants[i,]) +
theme(legend.position = "top", axis.text.x = element_text(angle = 90), axis.ticks.length= unit(.5, "cm"))
print(responses)
#tried using geom_vline() to add vertical gridlines but it looked shit unfortunately
#this is for getting the average results for each colour pair to feed into the sim matrix
stretchedmeans$newthing <- "NA"
for (k in 1:nrow(complist)){
iter <- complist$complist[k]
stretchedmeans$newthing[iter] <- complist$meanresponses[k]
}
names(stretchedmeans)[names(stretchedmeans) == "newthing"] <- as.character(participants[i,])
cbind(compset, stretchedmeans)
#the pilot data didnt have catch trial responses in it due to my fuckup
catchzone <- tempframe[tempframe[, "catchbool"] == TRUE, ]
catchzone$corrs <- cor(tempframe$similarity, tempframe$catchnumber)
catchplot <- ggplot(data= catchzone, aes(x= trialno, y= similarity, colour = "response"), shape=3) +
geom_point() +
geom_point(aes(y=catchnumber, colour="catch target"), shape=4) +
labs(title=participants[i,])
#here id put a graph of correlation between catch prompt and response against reaction time
#but im fairly sure the catches are fucked somehow so theres no point
}
View(compset)
if (length(which(tempframe$realcomparison == tempframe$realcomparison[j], arr.ind=TRUE)) < 2){
print("missing at")
print(which(tempframe$realcomparison == tempframe$realcomparison[j], arr.ind=TRUE))
tempframe <- tempframe[-c(j),]
}
if (length(which(tempframe$realcomparison == tempframe$realcomparison[j], arr.ind=TRUE)) < 2){
print("missing at")
print(which(tempframe$realcomparison == tempframe$realcomparison[j], arr.ind=TRUE))
tempframe <- tempframe[-c(j),]
}
#i fucked up the experiment program somehow and there's two observations missing from each set. gotta drop the singletons.
# also, none of the responses are "2"
# also, there's something wrong with the catch trials
# what is going on?
for (j in c(8:nrow(tempframe))){
if (length(which(tempframe$realcomparison == tempframe$realcomparison[j], arr.ind=TRUE)) < 2){
print("missing at")
print(which(tempframe$realcomparison == tempframe$realcomparison[j], arr.ind=TRUE))
tempframe <- tempframe[-c(j),]
}
}
View(tempframe)
tempframe <- analysisdata %>% filter(participant == participants[i,])
participants[1]
participants[0]
View(participants)
#prolific gives us really fucked up participant codes so we need to keep track of them
participants <- unique(analysisdata[c("participant")])
View(participants)
View(participants)
participants <- unique(pilotdata$id)
#Select variables we need for analysis
trial_vars<- c( "participant", "practice_comparison", "pracsimilarity", "realcomparison", "similarity", "catchnumber", "response_time", "trials_2.thisTrialN")
analysisdata <- pilotdata[trial_vars]
#prolific gives us really fucked up participant codes so we need to keep track of them
participants <- unique(analysisdata[c("participant")])
View(participants)
participants <- unique(pilotdata$id)
#establishes data frame the pearson results will be put in
pearsonresults <- cor(mtcars$disp, mtcars$cyl)
pearsonresults <- pearsonresults[-c(0)]
meantimes <- data.frame(c(1:nrow(participants)))
meantimes <- meantimes[-c(0)]
#gonna store the average responses in here
compset <- data.frame(c(1:4371))
stretchedmeans <- compset
for (i in c(1:nrow(participants))){
tempframe <- analysisdata %>% filter(participant == participants[i,])
#labels the first and second passes
tempframe$pass <- "first pass"
tempframe$pass[170:nrow(tempframe)] <- "second pass"
tempframe$pass[0:7] <- "practice"
#the following is stuff for catch trials that i copied from beths code.
#i rewrote it so that id understand it, but its essentially the same as hers
#print("babbis")
#pulls the catch trials order and makes it a list of numbers "catches"
allcatches <- (unique(pilotdata$catchtrialorder))
allcatches <- str_sub(allcatches, 2, -2)
allcatches <- str_split(allcatches, pattern = fixed(","))
#for some reason the first item in allcatches was empty so i remove it
allcatches <- allcatches[-c(1)]
#access whichever participant's catch trial sequence you want
#remember to move all this shit within the for loop that goes through all the participants
#and swap this 17 for an "i"
catches <- allcatches[[i]]
#including the trial ones
catches <- as.numeric(catches)
catches <- sort(catches)
# in the catchbool column, rows whose trialnumber matches an entry in the catches
# list (which is a list of trials that were catch trials) will be marked TRUE
tempframe$catchbool <- is.element(tempframe$trials_2.thisTrialN, catches)
catchesframe <- tempframe[-c(1:7),]
#i fucked up the experiment program somehow and there's two observations missing from each set. gotta drop the singletons.
# also, none of the responses are "2"
# also, there's something wrong with the catch trials
# what is going on?
for (j in c(8:nrow(tempframe))){
if (length(which(tempframe$realcomparison == tempframe$realcomparison[j], arr.ind=TRUE)) < 2){
print("missing at")
print(which(tempframe$realcomparison == tempframe$realcomparison[j], arr.ind=TRUE))
tempframe <- tempframe[-c(j),]
}
}
#make the first pass and second pass in seperate datasets, and then
#arrange them so theyre in the same order. simplifies things
firstpasses <- tempframe[with(tempframe,which(pass == "first pass")), ]
firstpasses <- firstpasses  %>% arrange(realcomparison)
secondpasses <- tempframe[with(tempframe,which(pass == "second pass")), ]
secondpasses <- secondpasses  %>% arrange(realcomparison)
#this generates graphs of the similarity ratings- but the x axis is in order
#of comparison number in the reference list, not the order that the participants
#made the comparisons in.
complist <- firstpasses$realcomparison
complist <- data.frame(complist)
complist$meanresponses <- (firstpasses$similarity +secondpasses$similarity)/2
complist$first <- firstpasses$similarity
complist$timefirst <- firstpasses$response_time
complist$second <- secondpasses$similarity
complist$timesecond <- secondpasses$response_time
complist$trialnos <- firstpasses$trials_2.thisTrialN
complist$meantime <- (complist$timefirst + complist$timesecond) /2
totalmeantime <- mean(complist$meantime)
meantimes <- rbind(meantimes, totalmeantime)
#correlates the first passes with the second passes, pearson style
pearson <- cor(firstpasses$similarity, secondpasses$similarity)
#print(tempframe$participant[i])
#print("in firstpasses:")
#print(nrow(firstpasses))
#print(pearson)
pearsonresults <- rbind(pearsonresults, pearson)
rownames(pearsonresults)[i] = as.character(tempframe$participant[i])
responses<- ggplot(data=complist, aes(x=trialnos)) +
geom_point(shape = 3, aes(y = first, colour = "first pass")) +
geom_point(shape = 4, aes(y = second, colour = "second pass")) +
geom_line(aes(y=meanresponses, colour = "average")) +
labs(title=participants[i,]) +
theme(legend.position = "top", axis.text.x = element_text(angle = 90), axis.ticks.length= unit(.5, "cm"))
print(responses)
#tried using geom_vline() to add vertical gridlines but it looked shit unfortunately
#this is for getting the average results for each colour pair to feed into the sim matrix
stretchedmeans$newthing <- "NA"
for (k in 1:nrow(complist)){
iter <- complist$complist[k]
stretchedmeans$newthing[iter] <- complist$meanresponses[k]
}
names(stretchedmeans)[names(stretchedmeans) == "newthing"] <- as.character(participants[i,])
cbind(compset, stretchedmeans)
#the pilot data didnt have catch trial responses in it due to my fuckup
catchzone <- tempframe[tempframe[, "catchbool"] == TRUE, ]
catchzone$corrs <- cor(tempframe$similarity, tempframe$catchnumber)
catchplot <- ggplot(data= catchzone, aes(x= trialno, y= similarity, colour = "response"), shape=3) +
geom_point() +
geom_point(aes(y=catchnumber, colour="catch target"), shape=4) +
labs(title=participants[i,])
#here id put a graph of correlation between catch prompt and response against reaction time
#but im fairly sure the catches are fucked somehow so theres no point
}
participants[1]
#for (i in c(1:nrow(participants))){
i=1
tempframe <- analysisdata %>% filter(participant == participants[i,])
participants[1,]
participants[1]
#tempframe <- analysisdata %>% filter(participant == participants[i,])
tempframe <- analysisdata
View(tempframe)
View(pilotdata)
#Select variables we need for analysis
trial_vars<- c( "participant", "practice_comparison", "pracsimilarity", "catch_response_time", "catchnumberprac", "catchpracsimilarity", "realcomparison", "similarity", "catchnumber", "catchsimilarity", "catchRT", "catchtrialorder", "response_time", "trials_2.thisTrialN")
analysisdata <- pilotdata[trial_vars]
#establishes data frame the pearson results will be put in
pearsonresults <- cor(mtcars$disp, mtcars$cyl)
pearsonresults <- pearsonresults[-c(0)]
meantimes <- data.frame(c(1:nrow(participants)))
meantimes <- meantimes[-c(0)]
#gonna store the average responses in here
compset <- data.frame(c(1:4371))
stretchedmeans <- compset
#for (i in c(1:nrow(participants))){
i=1
#tempframe <- analysisdata %>% filter(participant == participants[i,])
tempframe <- analysisdata
#labels the first and second passes
tempframe$pass <- "first pass"
tempframe$pass[169:nrow(tempframe)] <- "second pass"
tempframe$pass[0:7] <- "practice"
#the following is stuff for catch trials that i copied from beths code.
#i rewrote it so that id understand it, but its essentially the same as hers
#print("babbis")
#pulls the catch trials order and makes it a list of numbers "catches"
allcatches <- (unique(pilotdata$catchtrialorder))
allcatches <- str_sub(allcatches, 2, -2)
allcatches <- str_split(allcatches, pattern = fixed(","))
View(allcatches)
#for some reason the first item in allcatches was empty so i remove it
allcatches <- allcatches[-c(1)]
#access whichever participant's catch trial sequence you want
#remember to move all this shit within the for loop that goes through all the participants
#and swap this 17 for an "i"
catches <- allcatches[[i]]
#including the trial ones
catches <- as.numeric(catches)
catches <- sort(catches)
# in the catchbool column, rows whose trialnumber matches an entry in the catches
# list (which is a list of trials that were catch trials) will be marked TRUE
tempframe$catchbool <- is.element(tempframe$trials_2.thisTrialN, catches)
# in the catchbool column, rows whose trialnumber matches an entry in the catches
# list (which is a list of trials that were catch trials) will be marked TRUE
tempframe$catchbool <- is.element(tempframe$trials_2.thisN, catches)
source('C:/Users/domin/Desktop/New folder/aededdeaedadededeadedeadae.R', echo=TRUE)
source('C:/Users/domin/Desktop/New folder/aededdeaedadededeadedeadae.R', echo=TRUE)
source('C:/Users/domin/Desktop/New folder/aededdeaedadededeadedeadae.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
#Select variables we need for analysis
trial_vars<- c( "participant", "practice_comparison", "pracsimilarity", "realcomparison", "similarity", "response_time", "trials_2.thisN")
catch_vars<- c("participant", "catch_response_time", "catchnumberprac", "catchpracsimilarity", "catchnumber", "catchsimilarity", "catchRT", "catchtrialorder", "trials_2.thisN")
trialdata <- pilotdata[trial_vars]
catchdata <- pilotdata[catch_vars]
View(trialdata)
source('C:/Users/domin/Desktop/New folder/just me this time.R', echo=TRUE)
ggplot(trialdata, aes(x=catchsimilarity, y=catchRT)) +
geom_point(aes(x=catchnumber))
View(catchdata)
ggplot(catchdata, aes(x=catchsimilarity, y=catchRT)) +
geom_point(aes(x=catchnumber))
ggplot(catchdata, aes(x=catchRT, y=catchsimilarity)) +
geom_point(aes(y=catchnumber))
ggplot(catchdata, aes(x=catchRT, y=catchsimilarity, colour="response")) +
geom_point(aes(y=catchnumber, colour="prompt"))
ggplot(catchdata, aes(y=catchsimilarity)) +
geom_point(aes(y=catchnumber, colour="prompt")) +
geom_point(aes(y=catchsimilarity, colour="response"))
ggplot(catchdata, aes(x=catchRT)) +
geom_point(aes(y=catchnumber, colour="prompt")) +
geom_point(aes(y=catchsimilarity, colour="response"))
ggplot(catchdata, aes(x=catchRT)) +
geom_point(aes(y=catchnumber, colour="prompt", shape=3)) +
geom_point(aes(y=catchsimilarity, colour="response", shape=4))
ggplot(catchdata, aes(x=catchRT)) +
geom_point(aes(y=catchnumber, colour="prompt", shape="3")) +
geom_point(aes(y=catchsimilarity, colour="response", shape="4"))
ggplot(catchdata, aes(x=catchRT)) +
geom_point(aes(y=catchnumber, colour="prompt", shape="1")) +
geom_point(aes(y=catchsimilarity, colour="response", shape="4"))
ggplot(catchdata, aes(x=catchRT)) +
geom_point(aes(y=catchnumber, colour="prompt", shape="5")) +
geom_point(aes(y=catchsimilarity, colour="response", shape="4"))
ggplot(catchdata, aes(x=catchRT)) +
geom_point(aes(y=catchnumber, colour="prompt", shape="6")) +
geom_point(aes(y=catchsimilarity, colour="response", shape="4"))
ggplot(catchdata, aes(x=catchRT)) +
geom_point(shape = 3, aes(y=catchnumber, colour="prompt")) +
geom_point(shape = 4, aes(y=catchsimilarity, colour="response"))
ggplot(catchdata, aes(x=catchRT)) +
geom_boxplot() +
geom_point(shape = 3, aes(y=catchnumber, colour="prompt")) +
geom_point(shape = 4, aes(y=catchsimilarity, colour="response"))
ggplot(catchdata, aes(x=catchRT)) +
geom_point(shape = 3, aes(y=catchnumber, colour="prompt")) +
geom_point(shape = 4, aes(y=catchsimilarity, colour="response"))
firstpasses <- trialdata[c(8:168)]
firstpasses <- trialdata[c(8:168)]
firstpasses <- trialdata[8:168]
trialdata[1]
trialdata[1,]
firstpasses <- trialdata[(8:168),]
View(firstpasses)
firstpasses <- trialdata[(8:167),]
View(trialdata)
secondpasses <- trialdata[(168:327),]
doublepasscorr <- cor(firstpasses$similarity, secondpasses$similarity)
trialdata$pass[(0:7),] <- "practice"
trialdata$pass[(8:167),] <- "first pass"
trialdata[(0:7),]
trialdata$pass[0:7] <- "practice"
trialdata$pass[c(0:7)] <- "practice"
trialdata$pass <- "practice"
trialdata$pass[(8:167),] <- "first pass"
trialdata$pass[8:167] <- "first pass"
trialdata$pass[168:327] <- "second pass"
View(trialdata)
ggplot(trialdata, aes(x=realcomparison, y= similarity, shape=pass)) +
geom_point()
ggplot(trialdata, aes(x=realcomparison, y= similarity, colour=pass)) +
geom_point()
ggplot(trialdata, aes(x=trials2.thisN, y= similarity, colour=pass)) +
geom_point()
ggplot(trialdata, aes(x=trials_2.thisN, y= similarity, colour=pass)) +
geom_point()
View(pilotdata)
organised <- c(1:160)
organised$firstpasses <- trialdata$similarity[8:167]
organised$secondpasses <- trialdata$similarity[168:327]
organised$comparison <- trialdata$realcomparison[8:167]
View(organised)
organised <- data.frame(c(1:160))
organised$firstpasses <- trialdata$similarity[8:167]
organised$secondpasses <- trialdata$similarity[168:327]
organised$comparison <- trialdata$realcomparison[8:167]
View(organised)
organised$meanresponse <- mean(organised$firstpasses, organised$secondpasses)
organised$meanresponse <- (organised$firstpasses + organised$secondpasses)/2
View(organised)
organised <- organised %>% rename(c.1.160. = trialno)
organised <- organised %>% rename(trialno = c.1.160.)
ggplot(data=organised, aes(x=trialno)) +
geom_point(shape = 3, aes(y=firstpasses, colour = "first pass")) +
geom_point(shape = 4, aes(y=secondpasses, colour = "second pass")) +
geom_line(aes(y=meanresponse, colour = "mean response"))
organised$difference <- organised$firstpasses - organised$secondpasses
ggplot(data=organised, aes(x=trialno, y=difference))+
geom_point()
ggplot(data=organised, aes(x=trialno, y=difference))+
geom_line()
organised$firsttime <- trialdata$response_time[8:167]
organised$secondpasses <- trialdata$similarity[168:327]
organised$secondtime <- trialdata$response_time[168:327]
organised$meantime <- (organised$firsttime + organised$secondtime)/2
#plots difference between first and second pass as a line
ggplot(data=organised, aes(x=trialno, y=difference))+
geom_line() +
geom_line(aes(y=firsttime, colour = "response time on 1st trial")) +
geom_line(aes(y=secondtime, colour = "response time on 2nd trial"))
View(organised)
View(organised)
View(organised)
ggplot(data=organised, aes(x=trialno)) +
geom_line(aes(y=firsttime, colour = "response time on 1st trial")) +
geom_line(aes(y=secondtime, colour = "response time on 2nd trial"))
#plots difference between first and second pass as a line
ggplot(data=organised, aes(x=trialno, y=difference, colour = "difference between trials"))+
geom_line() +
geom_line(aes(y=firsttime, colour = "response time on 1st trial")) +
geom_line(aes(y=secondtime, colour = "response time on 2nd trial"))
source('C:/Users/domin/Desktop/New folder/just me this time.R', echo=TRUE)
#plots difference between first and second pass as a line
ggplot(data=organised, aes(x=trialno, y=difference, colour = "difference between trials"))+
geom_line() +
geom_line(aes(y=firsttime, colour = "response time on 1st trial")) +
geom_line(aes(y=secondtime, colour = "response time on 2nd trial")) +
labs(title = "difference between passes; also reaction times")
#plots first and second pass, plus the mean response, against trial number
ggplot(data=organised, aes(x=trialno)) +
geom_point(shape = 3, aes(y=firstpasses, colour = "first pass")) +
geom_point(shape = 4, aes(y=secondpasses, colour = "second pass")) +
geom_line(aes(y=meanresponse, colour = "mean response"))
#plots first and second pass, plus the mean response, against trial number
ggplot(data=organised, aes(x=trialno)) +
geom_point(shape = 3, aes(y=firstpasses, colour = "first pass")) +
geom_point(shape = 4, aes(y=secondpasses, colour = "second pass")) +
geom_line(aes(y=meanresponse, colour = "mean response")) +
labs(title="trial responses for dominik", x="similarity rating")
#plots first and second pass, plus the mean response, against trial number
ggplot(data=organised, aes(x=trialno)) +
geom_point(shape = 3, aes(y=firstpasses, colour = "first pass")) +
geom_point(shape = 4, aes(y=secondpasses, colour = "second pass")) +
geom_line(aes(y=meanresponse, colour = "mean response")) +
labs(title="trial responses for dominik", y="similarity rating", x= "trial number")
View(catchdata)
ggplot(data=catchdata, aes(x=trialno)) +
geom_point(shape = 3, aes(y=catchsimilarity, colour = "response")) +
geom_point(shape=4, aes(y=catchnumber, colour = "prompt")) +
geom_line(aes(y=catchRT, colour= "response time")) +
labs(title = "catch trial responses")
ggplot(data=catchdata, aes(x=trials_2.thisN)) +
geom_point(shape = 3, aes(y=catchsimilarity, colour = "response")) +
geom_point(shape=4, aes(y=catchnumber, colour = "prompt")) +
geom_line(aes(y=catchRT, colour= "response time")) +
labs(title = "catch trial responses")
ggplot(data=catchdata, aes(x=trials_2.thisN)) +
geom_point(shape = 3, aes(y=catchsimilarity, colour = "response")) +
geom_point(shape=4, aes(y=catchnumber, colour = "prompt")) +
geom_line(aes(y=catchRT, colour= "response time")) +
labs(title = "catch trial responses")
ggplot(data=catchdata, aes(x=trials_2.thisN)) +
geom_point(shape = 3, aes(y=catchsimilarity, colour = "response")) +
geom_point(shape=4, aes(y=catchnumber, colour = "prompt")) +
geom_point(aes(y=catchRT, colour= "response time")) +
labs(title = "catch trial responses")
ggplot(data=catchdata, aes(x=trials_2.thisN)) +
geom_point(shape = 3, aes(y=catchsimilarity, colour = "response")) +
geom_point(shape=4, aes(y=catchnumber, colour = "prompt")) +
geom_line(aes(y=catchRT, colour= "response time")) +
labs(title = "catch trial responses")
bepis <- catchdata.dropna( how='all')
bepis <- catchdata[rowSums(is.na(catchdata)) != ncol(catchdata), ]
View(bepis)
catchdata <- catchdata[-c("trials_2.thisN")]
ggplot(data=catchdata, aes(x=c(1:20))) +
geom_point(shape = 3, aes(y=catchsimilarity, colour = "response")) +
geom_point(shape=4, aes(y=catchnumber, colour = "prompt")) +
geom_line(aes(y=catchRT, colour= "response time")) +
labs(title = "catch trial responses")
source('C:/Users/domin/Desktop/New folder/just me this time.R', echo=TRUE)
bepis <- catchdata[rowSums(is.na(catchdata)) != ncol(catchdata), ]
View(bepis)
bepis <- is.na(catchdata)
View(bepis)
bepis <- filter(catchdata, rowSums(is.na(catchdata)) != ncol(catchdata))
View(bepis)
bepis <- filter(catchdata, rowSums(is.na(catchdata)) != ncol(catchdata))
View(bepis)
catchcoords <- unique(catchdata$catchtrialorder)
catchcoords <- catchcoords[-c(0)]
catchcoords <- catchcoords[1]
catchcoords <- unique(catchdata$catchtrialorder)
catchcoords <- catchcoords[1]
catchcoords <- unique(catchdata$catchtrialorder)
catchcoords
catchcoords <- catchcoords[2]
catchcoords <- unique(catchdata$catchtrialorder)
catchcoords <- catchcoords[-c(1)]
catchcoords <- as.numeric(catchcoords)
catchcoords <- unique(catchdata$catchtrialorder)
catchcoords <- catchcoords[-c(1)]
catchcoords <- str_sub(catchcoords, 2, -2)
catchcoords <- str_split(catchcoords, pattern = fixed(","))
catchcoords <- as.numeric(catchcoords)
View(catchcoords)
catchcoords <- str_split(catchcoords, pattern = fixed(","))
catchcoords <- unique(catchdata$catchtrialorder)
catchcoords <- catchcoords[-c(1)]
catchcoords <- str_sub(catchcoords, 2, -2)
catchcoords <- str_split(catchcoords, pattern = fixed(","))
View(catchcoords)
catchcoords <- as.numeric(catchcoords)
View(catchcoords)
catchcoords
as.numeric(catchcoords)
catchcoords <- as.numeric(unlist(catchcoords))
catchcoords <- sort(catchcoords)
catchdata <- catchdata[catchcoords]
catchdata <- catchdata[c(catchcoords)]
catchcoords
catchdata <- catchdata[c(catchcoords),]
View(catchdata)
catchdata <- pilotdata[catch_vars]
propercatches <- catchdata[-c(1:7),]
propercatches <- propercatches[c(catchcoords),]
View(propercatches)
propercatches$number <- rownames(propercatches)
propercatches$number <- c(1:20)
ggplot(data=catchdata, aes(x=number)) +
geom_point(shape = 3, aes(y=catchsimilarity, colour = "response")) +
geom_point(shape=4, aes(y=catchnumber, colour = "prompt")) +
geom_line(aes(y=catchRT, colour= "response time")) +
labs(title = "catch trial responses")
ggplot(data=propercatches, aes(x=number)) +
geom_point(shape = 3, aes(y=catchsimilarity, colour = "response")) +
geom_point(shape=4, aes(y=catchnumber, colour = "prompt")) +
geom_line(aes(y=catchRT, colour= "response time")) +
labs(title = "catch trial responses")
ggplot(data=propercatches, aes(x=number)) +
geom_point(shape = 3, aes(y=catchsimilarity, colour = "response")) +
geom_point(shape=4, aes(y=catchnumber, colour = "prompt")) +
geom_line(aes(y=catchRT, colour= "response time")) +
labs(title = "catch trial responses", y=reaction time (seconds))
ggplot(data=propercatches, aes(x=number)) +
geom_point(shape = 3, aes(y=catchsimilarity, colour = "response")) +
geom_point(shape=4, aes(y=catchnumber, colour = "prompt")) +
geom_line(aes(y=catchRT, colour= "response time")) +
labs(title = "catch trial responses", y= "reaction time (seconds)")
source('C:/Users/domin/Desktop/New folder/just me this time.R', echo=TRUE)
